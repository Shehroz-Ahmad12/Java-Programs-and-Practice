package lms;


import java.io.EOFException;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.ArrayList;


public class Book implements Serializable {
	private String bookID;
	private String title;
	private String author;
	private String publisher;
	private String quantity;
	private double cost;
	
	public Book(String bookID, String title, String author, String publisher, String quantity, double cost) {
		this.bookID = bookID;
		this.title = title;
		this.author = author;
		this.publisher = publisher;
		this.quantity = quantity;
		this.cost=cost;
	}
	
	public Book(Book b) {
		this.bookID=b.bookID;
		this.title=b.title;
		this.author=b.author;
		this.publisher=b.publisher;
		this.quantity=b.quantity;
		this.cost=b.cost;
	}

	public String getBookID() {
		return bookID;
	}

	public void setBookID(String bookID) {
		this.bookID = bookID;
	}

	public String getTitle() {
		return title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public String getAuthor() {
		return author;
	}

	public void setAuthor(String author) {
		this.author = author;
	}

	public String getPublisher() {
		return publisher;
	}

	public void setPublisher(String publisher) {
		this.publisher = publisher;
	}

	public String getQuantity() {
		return quantity;
	}

	public void setQuantity(String quantity) {
		this.quantity = quantity;
	}

	public double getCost() {
		return cost;
	}

	public void setCost(double cost) {
		this.cost = cost;
	}
	
	
	
	public void addBook(Book b) { 
        ObjectOutputStream outputStream = null; 

		try {
			ArrayList<Book> BookList = readBookData();
			BookList.add(b);

			outputStream = new ObjectOutputStream(new FileOutputStream("Books.ser"));
			
			for(int i = 0 ; i < BookList.size() ; i++) {
				outputStream.writeObject(BookList.get(i));
			}
		} catch(IOException e) {
			System.out.println("IO Exception while opening file");
		} finally { 
			try {
				if(outputStream != null) {
					outputStream.close();								
				}

			} catch (IOException e) {
				System.out.println("IO Exception while closing file");
			}
		}		
	}
	
	
	public ArrayList<Book> readBookData(){
		ArrayList<Book> BookList = new ArrayList<Book>(0);
		ObjectInputStream inputStream = null;
		try
		{
		inputStream = new ObjectInputStream(new FileInputStream("Book.ser"));
			boolean EOF = false;
			while(!EOF) {
				try {
					Book myObj = (Book) inputStream.readObject();
					BookList.add(myObj);
					//System.out.println("Read: " + myObj.getName());
				} catch (ClassNotFoundException e) {
					//System.out.println("Class not found");
				} catch (EOFException end) {
					EOF = true;
				}
                        }
                }
		 catch(FileNotFoundException e) {
			//System.out.println("Cannot find file");
		} catch (IOException e) {
			//System.out.println("IO Exception while opening stream");
			//e.printStackTrace();
		} finally { 
			try {
				if(inputStream != null)
					inputStream.close( );
			} catch (IOException e) {
				System.out.println("IO Exception while closing file");
			}
		}
                
		return BookList;
	}
	
		
	

}
