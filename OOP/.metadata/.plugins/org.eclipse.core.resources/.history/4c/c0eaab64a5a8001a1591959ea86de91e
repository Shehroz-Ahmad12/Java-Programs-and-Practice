package lms;

import java.io.EOFException;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;

public class BookIssue {
	private Member member;
	private Book[] booksIssued=new Book[5];
	private Date issueDate;
	private Date returnDate;
	private double bill;
	
	public BookIssue() {
		
	}
	public BookIssue(Member member, Book[] booksIssued, Date issueDate, Date returnDate, double bill) {
		super();
		this.member = member;
		
		for(int i=0;i<booksIssued.length;i++)
		
		{
		this.booksIssued[i] = booksIssued[i];
		}
		
		this.issueDate = new Date(issueDate);
		this.returnDate =new Date (returnDate);
	}
	

	public Date getIssueDate() {
		return issueDate;
	}


	public void setIssueDate(Date issueDate) {
		this.issueDate = issueDate;
	}


	public Date getReturnDate() {
		return returnDate;
	}


	public void setReturnDate(Date returnDate) {
		this.returnDate = returnDate;
	}


	public double calculateBill() {
		double bill=0;
		for(int i=0;i<booksIssued.length;i++) {
			bill+=booksIssued[i].getCost();
		}
		return bill;
	}
	
	
	
	
	public void IssueBooks() { 
		ArrayList<BookIssue> BooksIssuedList = readBookIssueData();
		BooksIssuedList.add(this);
		writeBookIssueData(BooksIssuedList);
	}
	
	public void returnBooks() {
		ArrayList<BookIssue> BooksIssuedList = readBookIssueData();
		for(int i=0;i<BooksIssuedList.size();i++) {
			
		}
		
	}


public ArrayList<BookIssue> readBookIssueData(){
	ArrayList<BookIssue> BooksIssuedList = new ArrayList<BookIssue>(0);
	ObjectInputStream inputStream = null;
	try
	{
	inputStream = new ObjectInputStream(new FileInputStream("BooksIssued.ser"));
		boolean EOF = false;
		while(!EOF) {
			try {
				BookIssue myObj = (BookIssue) inputStream.readObject();
				BooksIssuedList.add(myObj);
				//System.out.println("Read: " + myObj.getName());
			} catch (ClassNotFoundException e) {
				//System.out.println("Class not found");
			} catch (EOFException end) {
				EOF = true;
			}
                    }
            }
	 catch(FileNotFoundException e) {
		//System.out.println("Cannot find file");
	} catch (IOException e) {
		//System.out.println("IO Exception while opening stream");
		//e.printStackTrace();
	} finally { 
		try {
			if(inputStream != null)
				inputStream.close( );
		} catch (IOException e) {
			System.out.println("IO Exception while closing file");
		}
	}
            
	return BooksIssuedList;
}





public void writeBookIssueData(ArrayList<BookIssue> BooksIssuedList) {
ObjectOutputStream outputStream = null; 

try {
	
	outputStream = new ObjectOutputStream(new FileOutputStream("BooksIssued.ser"));
	
	for(int i = 0 ; i < BooksIssuedList.size() ; i++) {
		outputStream.writeObject(BooksIssuedList.get(i));
	}
} catch(IOException e) {
	System.out.println("IO Exception while opening file");
} finally { 
	try {
		if(outputStream != null) {
			outputStream.close();								
		}

	} catch (IOException e) {
		System.out.println("IO Exception while closing file");
	}
}}
	
	

}
